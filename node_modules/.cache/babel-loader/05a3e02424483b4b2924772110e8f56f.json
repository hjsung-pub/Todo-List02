{"ast":null,"code":"import _objectSpread from\"/Users/hjsung/Github/Todo-List-git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/hjsung/Github/Todo-List-git/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useCallback}from'react';import TodoTemplate from'./components/TodoTemplate';import TodoInsert from'./components/TodoInsert';import TodoList from'./components/TodoList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useState=useState([{id:1,text:'리액트의 기초 알아보기',checked:true},{id:2,text:'리액트의 스타일링 해보기',checked:false},{id:3,text:'일정관리 앱 만들어보기',checked:false}]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];//고유값으로 사용될 id\n//ref를 사용하여 변수 담기\nvar nextId=useRef(4);var onInsert=useCallback(function(text){var todo={id:nextId.current,text:text,checked:false};if(text===''){alert(\"할 일을 입력해주세요.\");return;}setTodos(todos.concat(todo));nextId.current+=1;},[todos]);var onRemove=useCallback(function(id){setTodos(todos.filter(function(todo){return todo.id!==id;}));},[todos]);var onToggle=useCallback(function(id){setTodos(todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{checked:!todo.checked}):todo;}));},[todos]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(TodoTemplate,{children:[/*#__PURE__*/_jsx(TodoInsert,{onInsert:onInsert}),/*#__PURE__*/_jsx(TodoList,{todos:todos,onRemove:onRemove,onToggle:onToggle})]})});}","map":{"version":3,"sources":["/Users/hjsung/Github/Todo-List-git/src/App.js"],"names":["React","useState","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","App","id","text","checked","todos","setTodos","nextId","onInsert","todo","current","alert","concat","onRemove","filter","onToggle","map"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,WAAlC,KAAqD,OAArD,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,C,wFAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAE5B,cAA0BN,QAAQ,CAAC,CACjC,CACEO,EAAE,CAAG,CADP,CAEEC,IAAI,CAAG,cAFT,CAGEC,OAAO,CAAG,IAHZ,CADiC,CAMjC,CACEF,EAAE,CAAG,CADP,CAEEC,IAAI,CAAG,eAFT,CAGEC,OAAO,CAAG,KAHZ,CANiC,CAWjC,CACEF,EAAE,CAAG,CADP,CAEEC,IAAI,CAAG,cAFT,CAGEC,OAAO,CAAG,KAHZ,CAXiC,CAAD,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAkBA;AACA;AACA,GAAMC,CAAAA,MAAM,CAAGX,MAAM,CAAC,CAAD,CAArB,CAEA,GAAMY,CAAAA,QAAQ,CAAGX,WAAW,CAC1B,SAACM,IAAD,CAAU,CACR,GAAMM,CAAAA,IAAI,CAAG,CACXP,EAAE,CAAGK,MAAM,CAACG,OADD,CAEXP,IAAI,CAAJA,IAFW,CAGXC,OAAO,CAAG,KAHC,CAAb,CAKA,GAAID,IAAI,GAAK,EAAb,CAAgB,CAAEQ,KAAK,CAAC,cAAD,CAAL,CAAuB,OAAO,CAChDL,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAaH,IAAb,CAAD,CAAR,CACAF,MAAM,CAACG,OAAP,EAAkB,CAAlB,CACD,CAVyB,CAW1B,CAACL,KAAD,CAX0B,CAA5B,CAcA,GAAMQ,CAAAA,QAAQ,CAAGhB,WAAW,CAE1B,SAACK,EAAD,CAAQ,CACNI,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,SAACL,IAAD,QAAUA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAtB,EAAb,CAAD,CAAR,CACD,CAJyB,CAK1B,CAACG,KAAD,CAL0B,CAA5B,CAQA,GAAMU,CAAAA,QAAQ,CAAGlB,WAAW,CAC1B,SAACK,EAAD,CAAQ,CACNI,QAAQ,CAACD,KAAK,CAACW,GAAN,CAAU,SAAAP,IAAI,QAAIA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAZ,gCAAsBO,IAAtB,MAA4BL,OAAO,CAAG,CAACK,IAAI,CAACL,OAA5C,GAAuDK,IAA3D,EAAd,CAAD,CAAR,CACD,CAHyB,CAI1B,CAACJ,KAAD,CAJ0B,CAA5B,CAOA,mBACE,kCACE,MAAC,YAAD,yBACE,KAAC,UAAD,EAAY,QAAQ,CAAEG,QAAtB,EADF,cAEE,KAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,CAAwB,QAAQ,CAAEQ,QAAlC,CAA4C,QAAQ,CAAEE,QAAtD,EAFF,GADF,EADF,CAQD","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nexport default function App() {\n\n  const [todos, setTodos] = useState([\n    {\n      id : 1,\n      text : '리액트의 기초 알아보기',\n      checked : true\n    },\n    {\n      id : 2,\n      text : '리액트의 스타일링 해보기',\n      checked : false\n    },\n    {\n      id : 3,\n      text : '일정관리 앱 만들어보기',\n      checked : false\n    }\n  ]);\n  \n  //고유값으로 사용될 id\n  //ref를 사용하여 변수 담기\n  const nextId = useRef(4)\n  \n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id : nextId.current,\n        text,\n        checked : false\n      };\n      if( text === ''){ alert(\"할 일을 입력해주세요.\"); return}\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));    \n    },\n    [todos],\n  )\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(todos.map(todo => todo.id === id ? { ...todo, checked : !todo.checked} : todo )); \n    },\n    [todos],\n  )\n\n  return (\n    <div>\n      <TodoTemplate>\n        <TodoInsert onInsert={onInsert}/>\n        <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n      </TodoTemplate>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}